[core]
	editor = nvim
	longpaths = true
	filemode = false
	autocrlf = true

[user]
	name = Adinelson Brühmüller
	email = adinelson.bruhmuller@movtech.com.br

[credential]
	helper = store

[credential "https://sources.movtech.com.br:3344"]
	provider = generic

[diff]
  tool = vscode

[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE

[merge]
  tool = vscode

[mergetool "vscode"]
  cmd = code --wait $MERGED

[fetch]
	prune = true

[alias]
	br = branch
	bra = branch -a
	brl = branch -l
	brr = branch -r
	cg = config
	cgg = config --global -e
	cgl = config --local -e
	cl = clone
	cldn = clean -dn
	clsm = clone --recurse-submodules 
	cm = commit
	cmad = commit --amend
	cmadam = commit --amend -a -m
	cmadan = commit --amend -a --no-edit
	cmadm = commit --amend -m
	cmadn = commit --amend --no-edit
	cmam = commit -a -m
	cmm = commit -m
	co = checkout
	cohf = checkout HEAD --
	delall = !git branch | grep -vE \"master|dev\" | xargs git branch -D
	df = diff
	dfv = difftool -t vimdiff
	fe = fetch
	fea = fetch --all
	feat = fetch --all --tags
	l = log
	lcm = log -1 HEAD --stat
	lo = log --graph --all --topo-order --pretty='format:%h %ai %s%d (%an)'
	logo = log --oneline
	lomd = log origin/dev..HEAD
	lomh = log origin/master..HEAD
	lp = log --color --graph --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'
	lsw = switch -
	pl = pull
	plo = pull origin
	plod = pull origin dev
	plom = pull origin master
	ps = push
	psf = push --force
	psu = push -u
	psup = "!f() { \
        current_branch=$(git rev-parse --abbrev-ref HEAD); \
        remote_branch=\"$current_branch\"; \
        if ! git rev-parse --abbrev-ref --symbolic-full-name @{u} >/dev/null 2>&1; then \
            remote_branch=\"--set-upstream origin $current_branch\"; \
        fi; \
        git push $remote_branch; \
    }; f"
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbd = rebase dev
	rbm = rebase master
	rescue = !git fsck --full --no-reflogs --unreachable --lost-found | grep commit | cut -d\\  -f3 | xargs -n 1 git log -n 1 --pretty=oneline > .git/lost-found.txt
	rmpo = remote prune origin
	safe = config --global --add safe.directory
	sh = stash
	sha = stash apply
	shc = stash clear
	shl = stash list
	shs = stash save
	st = status
	sw = switch
	swd = switch dev
	swm = switch master
	un = ls-files . --exclude-standard --others
	up = !git fetch && git status
	uppl = !git fetch && git status && git pull
	upmain = !git fetch && git status && git pull origin main
	updev = !git fetch && git status && git pull origin dev
	upmaster = !git fetch && git status && git pull origin master
	uphome = !git fetch && git status && git pull origin home
	upwork = !git fetch && git status && git pull origin work
  cyp = crypt
  rao = remote add origin
  rstd = reset --hard origin/dev
  rstm = reset --hard origin/master
  sm = submodule
  sma = submodule add
  smf = submodule foreach --recursive
  smu = submodule update
  smfuppl = submodule foreach --recursive 'git fetch && git status && git pull'
  smfup = submodule foreach --recursive 'git fetch && git status'
	smfupmain = submodule foreach --recursive 'git fetch && git pull origin main'
	smfupdev = submodule foreach --recursive 'git fetch && git pull origin dev'
	smfupmaster = submodule foreach --recursive 'git fetch && git pull origin master'
	smfuphome = submodule foreach --recursive 'git fetch && git pull origin home'
	smfupwork = submodule foreach --recursive 'git fetch && git pull origin work'
	smfcomain = submodule foreach --recursive 'git fetch && git checkout main'
	smfcodev = submodule foreach --recursive 'git fetch && git checkout dev'
	smfcomaster = submodule foreach --recursive 'git fetch && git checkout master'
	smfcohome = submodule foreach --recursive 'git fetch && git checkout home'
	smfcowork = submodule foreach --recursive 'git fetch && git checkout work'
[safe]
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/apps/scoop/current
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/buckets/versions
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/buckets/nerd-fonts
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/buckets/extras
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/buckets/main
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/rustlings
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/AppData/Local/nvim-data/site/pack/packer/start/plenary.nvim
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/AppData/Local/nvim-data/site/pack/packer/start/packer.nvim
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/AppData/Local/nvim-data/site/pack/packer/start/popup.nvim
  directory = C:/Users/adinelson.bruhmuller.MOVTECH/Documents/Projects/Rust/guessing_game
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/persist/pcsx2-dev/bios
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/persist/pcsx2-dev
	directory = C:/Projetos/quality-project/quality-app
	directory = C:/Projetos/quality-project/quality-api
	directory = C:/Projetos/bsc-project/bsc-app
	directory = C:/Projetos/bsc-project/bsc-api
	directory = C:/Projetos/menu-project/menu-app
	directory = C:/Projetos/menu-project/menu-api
	directory = C:/Projetos/stats-project/stats-app
	directory = C:/Projetos/stats-project/stats-api
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/persist/irfanview
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/persist/anki
	directory = C:/Projetos/budget-project/budget-api
	directory = C:/Projetos/budget-project/budget-app
	directory = C:/Projetos/supply-project/supply-app
	directory = C:/Projetos/supply-project/supply-api
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/.glaze-wm
	directory = C:\\Users\\adinelson.bruhmuller.MOVTECH\\AppData\\Local\\nvim\\
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/buckets/wangzq
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/buckets/rasa
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/Documents/Projects/C++/alura-cxx
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/Documents/Projects/Rust/rose-offline
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/persist/gpg
	directory = C:/Projetos/sales-project/sales-app
	directory = C:/Projetos/sales-project/sales-api
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/.local/share/chezmoi
	directory = C:/Users/adinelson.bruhmuller.MOVTECH/scoop/persist/vscode
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[pull]
	rebase = true
